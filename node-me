#!/usr/bin/env node --harmony
/**
 * A selection tool for installing node packages
 *
 * Michael Scott Hertzberg / moimikey
 *
 */
require("shelljs/global");
var inquirer = require("inquirer");
var checkboxes = [].concat({
  type: "checkbox",
  message: "Pick your poisons...",
  name: "packages",
  choices: []
});
[ 'babel',
  'async-await',
  'browserify',
  'webpack',
  'react',
  'eslint',
  'gulp'
].map(function(package) {
  checkboxes[0].choices.push(package);
});
inquirer.prompt(checkboxes,
function(answers) {
  answers.packages.map(function(package) {
    switch(package) {
    case 'babel':
      exec('npm install --save-dev babel-core \
      babel-preset-es2015 \
      babel-preset-stage-0 \
      babel-eslint');
      break;
    case 'browserify':
      exec('npm install --save-dev browserify \
      brfs \
      uglifyjs \
      zlib-browserify');
      break;
    case 'webpack':
      exec('npm install --save-dev webpack \
      webpack-dev-server \
      sass-loader \
      strip-loader \
      style-loader \
      json-loader \
      css-loader \
      react-hot-loader \
      babel-loader \
      autoprefixer-loader \
      extract-text-webpack-plugin \
      clean-webpack-plugin');
      exec('npm install --save file-loader \
      url-loader');
      break;
    case 'react':
      exec('npm install --save-dev react-a11y \
      react-hot-loader');
      exec('npm install --save react \
      react-inline-css \
      react-redux \
      react-router \
      redux \
      redux-form');
      break;
    case 'eslint':
      exec('npm install --save-dev eslint \
      eslint-plugin-react');
      break;
    case 'gulp':
      exec('npm install --save-dev gulp \
      gulp-plumber \
      gulp-eslint \
      gulp-help \
      gulp-filter \
      gulp-load-plugins \
      gulp-util');
      break;
    }
  })
});

/*

an http client? reqisition
 */
